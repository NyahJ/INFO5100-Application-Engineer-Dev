
1) Write a java function that adds all the digits of an integer until it is single digit. (You may assume that input is a positive number)
		i. function takes an integer as input and returns its sum of digits.
		ii. for example input = 37, sum = 3+7 = 10, sum = 1+0 = 1. result = 1.

		Here is the prototype you can work with
	
public int addDigits (int input){
   while (input >= 10) {
                int result = 0;
                while (input > 0) {
                    result += input % 10;
                    input = input / 10;
                }
                input = result;
            }
            return input;
        }


2) Write a method to find the maximum and minimum number in an array of numbers
	Example:
		Input : [3, 5, 7, 1, 4, 32, 15]
		Output : Max is 32 and Min is 1

    public static void findMaxAndMin(int[] array){
        int max = array[0];
        int min = array[0];
 
        for (int i = 0; i < array.length; i++) {
            if (array[i] > max) {
                max = array[i];
            }
  
            if (array[i] < min) {
                min = array[i];
            }
        }
        System.out.println("The Max value:" + max);
        System.out.println("The Min value:" + min);
    }
}

    

3) Write a method that takes a String and character as input and find how many characters are in the String
	Example #1
		Input : "North", 'r'
		Output : 1      //Explanation: "North" has 1 'r'


public int characterCountInString(String s,char c){
            int result = 0;
            for (int i = 0; i < s.length(); i++) {
                if (s.charAt(i) == c) {
                    result += 1;
                }
            }
            return result;
        }

4) Question : Employee.java file is uploaded in Assignment2 folder.

public class Assignment2 {

        /*
            This method should return the sum of salaries of employees having salary greater than 5000
            Note: Employee array is passed, not employee
        */
        
        public double salaryGreaterThanFiveThousand(Employee[] employees) {
            double result = 0;
            for (Employee employee : employess) {
                if (employee.getSalary() > 5000) {
                    result += employee.getSalary();
                }
            }
            return result;
        }


        /*
            This method should print either "Fizz", "Buzz" or "FizzBuzz"
            "Fizz" - if id of employee is divisible by 3
            "Buzz" - if id of employee is divisible by 5
            "FizzBuzz" - if id of employee is divisible by both 3 and 5
        */
        
        public void fizzBuzz(Employee employee) {
            int id = employee.getId();
            if (id % 3 == 0) {
                System.out.println("Fizz");
            }
            if (id % 5 == 0) {
                System.out.println("Buzz");
            }
            if (id % 3 == 0 && id % 5 == 0) {
                System.out.println("FizzBuzz");
            }
        }


        /*
            We are given two employee objects.
            Implement this method to swap salaries of employees
        */
        
        public void swap(Employee firstEmployee, Employee secondEmployee) {
            double salary1 = firstEmployee.getSalary();
            double salary2 = secondEmployee.getSalary();
            firstEmployee.setSalary(salary2);
            secondEmployee.setSalary(salary1);
        }


 /*
      Write a method to calculate the Social Security Tax of an employee and print it.
      If the salary is less than or equal to 8900, the Social Security Tax is 6.2% of the salary.
      If the salary is more than 8900, the Social Security Tax is 6.2% of 106,800.
 */
     
        public double socialSecurityTax(Employee employee) {
            double salary = employee.getSalary();
            double tax;
            if (salary <= 8900) {
                tax = salary * 0.062;
            } else {
                tax = 106800 * 0.062;
            }
            System.out.println(tax);
 }
 

        /*
      Write a method to calculate an employee's contribution for insurance coverage and print it.
      Amount of deduction is computed as follows:
      If the employee is under 35, rate is 3% of salary; if the employee is between 35 and 50(inclusive), rate is 4% of salary;
      If the employee is between 50 and 60(exclusive), rate is 5% of salary; If the employee is above 60, rate is 6% of salary.
 */
     
        public static double insuranceCoverage(Employee employee) {
            int age = employee.getAge();
            double salary = employee.getSalary();
            if (age < 35) {
                return salary * 0.03;
            } 
            if (age <= 50) {
                return salary * 0.04;
            } 
            if (age < 60) {
                return salary * 0.05;
            }
            return salary * 0.06;
 }
 

 /*
      Write a method to sort three employees' salary from low to high, and then print their name in order.
      For example, Alice's salary is 1000, John's salary is 500, Jenny's salary is 1200, you should print:
      John Alice Jenny
 */
     
        public void sortSalary(Employee e1, Employee e2, Employee e3) {
         Employee[] employees = {e1, e2, e3};
            Set<Employee> sortedEmployees = new HashSet<>();
            
            for (int i = 0; i < 3; i++) {
                double lowest = Double.MAX_VALUE;
                Employee lowestEmployee;
                for (Employee e : employees) {
                    if (sortedEmployees.contains(e)) {
                        continue;
                    }
                    if (e.getSalary() < lowest) {
                        lowest = e.getSalary;
                        lowestEmployee = e;
                    }
                }
                System.out.print(e.getFirstname + " ");
                sortedEmployees.add(e);
            }
 }


        /***************** Additional question for Extra Credit *****************/
        /*
            Implement this method to convert String[] to employees array.
            Ex: String[] employees = new String[]{"1,John,24,7500", "2,Hail,28,7899.90"};
            This String array of length 2 contains 2 employees in form of string, where
            id = 1
            firstName=John
            age=24
            salary=7500
            convert each string to employee object.
            Hint: Use String methods. Refer : https://docs.oracle.com/javase/7/docs/api/java/lang/String.html
        */
        
        public Employee[] createEmployees(String[] employeesStr) {
            Employee[] employees = new Employee[employeesStr.length];
            
            
            return employees;
        }
}